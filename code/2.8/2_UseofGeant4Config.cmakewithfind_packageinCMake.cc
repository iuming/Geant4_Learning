/***********************************************************************************************
 * FileName: 2_Use of Geant4Config.cmake with find_package in CMake
 * Author: 刘铭
 * Describes: 
 * Create: Jan 10 2021, 13:45
 * Last Modify: 
 * Modifications: 0
 * ********************************************************************************************/

/*****************************************************************
 * Geant4Config.cmakeGeant4安装的文件旨在与CMake的find_package 命令一起使用。CMake的将搜索使用该文件Geant4_DIR 上述变量，外加一个标准组路径所使用find_package。
 * 找到后，它将设置几个CMake变量，并提供一种机制来检查和激活Geant4的可选功能（如果您的应用程序需要这些功能）。find_package和这些变量用于配置需要Geant4的应用程序或库的最简单用法是：
 * **************************************************************/
find_package(Geant4 REQUIRED)                       # Find Geant4
add_executable(myg4app myg4app.cc)                  # Compile application
target_link_libraries(myg4app ${Geant4_LIBRARIES})  # Link it to Geant4
/********************************************************************
 * 该Geant4_LIBRARIES变量保存Geant4库的CMake导入目标的列表。这些设置并传播了Geant4的所有使用要求，并将其传播到使用目标（myg4app上面的可执行文件）。
 * 最小的示例仅要求找到Geant4安装。可以提供版本号来搜索大于或等于提供的版本的安装 ，例如:
 * *****************************************************************/
find_package(Geant4 10.0 REQUIRED)
/****************************************************************
 * 使CMake搜索版本号大于或等于10.0的Geant4安装。还可以指定确切的版本号：
 * *************************************************************/
find_package(Geant4 10.4.0 EXACT REQUIRED)
/*******************************************
 * 在这两种情况下，如果找不到符合这些版本要求的Geant4安装，CMake将失败并显示错误。
 * Geant4可以安装许多可选组件，还可以通过传递额外的“ component”自变量来要求并激活这些组件。例如，要求找到Geant4并支持gdml和Qt：
 * ****************************************/
find_package(Geant4 REQUIRED gdml qt)
/********************************************
 * 如果找到的安装不是使用这些选项构建的，它将失败。如果您只想激活存在的组件，则可以使用该模式:
 * *****************************************/
find_package(Geant4 REQUIRED)
find_package(Geant4 QUIET OPTIONAL_COMPONENTS qt)

/***********************************************
 * 这将要求CMake找到Geant4的核心安装，然后检查并激活Qt支持（如果安装提供了该支持），否则将继续进行而不会出现错误。这里要注意的关键是您可以find_package多次调用 以追加组件的配置。如果您使用此模式，并且需要检查是否找到了组件，则可以使用Geant4_<COMPONENTNAME>_FOUND在调用之后设置的变量find_package。
 * 有些组件是“被动的”，因为它们仅表示支持可用，而其他组件是“主动的”，因为它们表示对应用程序中链接到中的目标的组件的支持和激活Geant4_LIBRARIES。下面列出了最有用的组件及其行为的部分列表，但是要获得完整列表，请参阅已安装Geant4Config.cmake 文件中的列表。
 * ********************************************/